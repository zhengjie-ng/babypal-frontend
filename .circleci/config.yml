version: 2.1
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  snyk: snyk/snyk@2.3.0

jobs:
  secrets_scan_local:
    docker:
      - image: zricethezav/gitleaks:latest
    steps:
      - checkout
      - run:
          name: Run gitleaks scan (local files only)
          # --source . : scan current directory and all subdirectories
          # --no-git : do not scan git history
          command: gitleaks detect --source . --no-git
  build:
    docker:
      - image: cimg/node:22.19
    steps:
      - checkout

      - node/install-packages:
          pkg-manager: npm
  # Snyk Static Application Security Testing (code scan)
  snyk_sast:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - snyk/scan:
          command: code test
          fail-on-issues: false
          severity-threshold: medium

  test:
    docker:
      - image: cimg/node:22.19
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Running tests..."
          npm run test -- --run

  scan:
    docker:
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: nzj002/node-app-test-repository
    steps:
      - checkout
      - setup_remote_docker
      - docker/check:
          docker-username: DOCKER_LOGIN
          docker-password: DOCKER_PASSWORD
      - run: docker build -t $DOCKER_IMAGE .
      - snyk/scan:
          docker-image-name: $DOCKER_IMAGE
          fail-on-issues: false
          severity-threshold: medium
  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check:
          docker-username: DOCKER_LOGIN
          docker-password: DOCKER_PASSWORD
      - docker/build:
          image: $DOCKER_IMAGE
          tag: << pipeline.git.revision >>,latest
      - docker/push:
          image: $DOCKER_IMAGE
          tag: << pipeline.git.revision >>,latest

  deploy:
    working_directory: ~/repo
    docker:
      - image: cimg/node:23.10.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build React App
          command: npm run build
      - save_cache:
          key: app-build-cache-{{ .Branch }}
          paths:
            - ./dist
      - run:
          name: Deploy to Netlify
          command: ./node_modules/.bin/netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_ACCESS_TOKEN --prod --dir=dist

  release:
    docker:
      - image: cimg/node:22.19
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run semantic-release
          command: npm run semantic-release

workflows:
  workflow-develop:
    jobs:
      - secrets_scan_local:
          filters:
            branches:
              only: develop
      - build:
          filters:
            branches:
              only: develop
      - test:
          requires:
            - build
          filters:
            branches:
              only: develop
      - snyk_sast:
          requires:
            - build
          filters:
            branches:
              only: develop
      - scan:
          requires:
            - build
          filters:
            branches:
              only: develop
      - publish:
          requires:
            - test
            - scan
          filters:
            branches:
              only: develop

  workflow-release:
    jobs:
      - secrets_scan_local:
          filters:
            branches:
              only: release
      - build:
          filters:
            branches:
              only: release
      - test:
          requires:
            - build
          filters:
            branches:
              only: release
      - scan:
          requires:
            - build
          filters:
            branches:
              only: release
      - snyk_sast:
          requires:
            - build
          filters:
            branches:
              only: release
      - publish:
          requires:
            - test
          filters:
            branches:
              only: release
      - deploy:
          requires:
            - publish
            - scan
            - snyk_sast
          filters:
            branches:
              only: release
      - release:
          requires:
            - deploy
          filters:
            branches:
              only: release

  workflow-release-only:
    jobs:
      - deploy:
          filters:
            branches:
              only: release-only
